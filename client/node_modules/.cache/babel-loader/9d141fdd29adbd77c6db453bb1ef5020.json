{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js\";\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nconst metersToMiles = 0.000621371192;\n\nfunction AthleteStats() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  let stats;\n  let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n\n  if (cookies.access_token && !stats) {\n    stats = asyncFetch(athleteStatsUrl, cookies.access_token).then(data => {\n      return data.json();\n    }).then(stats => {\n      return stats;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Loading Stats...\");\n  } else {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, (stats.all_run_totals.distance * metersToMiles).toFixed(1), \" miles\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, context.user.clubs.map(club => {\n      return club.name;\n    })));\n  }\n}\n\nfunction Clubs() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  let usersClubs = context.user.clubs;\n  let clubs;\n\n  if (cookies.access_token && !clubs.length) {\n    clubs = usersClubs.map(club => {\n      let clubDetailsUrl = `https://www.strava.com/api/v3/clubs/${club.id}`;\n      return asyncFetch(clubDetailsUrl, cookies.access_token).then(data => {\n        return data.json();\n      }).then(club => {\n        return club;\n      });\n    });\n  }\n\n  return clubs ? clubs.map(club => {\n    console.log(club);\n    return React.createElement(\"div\", {\n      key: club.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, club.description));\n  }) : \"Loading Club Details...\";\n}\n\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, `${context.user.firstname}${\" \"}${context.user.lastname}`), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, `${context.user.city}${\", \"}${context.user.state}`), React.createElement(AthleteStats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Clubs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js"],"names":["React","useContext","useState","AuthContext","useCookies","asyncFetch","metersToMiles","AthleteStats","cookies","context","stats","athleteStatsUrl","user","id","access_token","then","data","json","all_run_totals","distance","toFixed","clubs","map","club","name","Clubs","usersClubs","length","clubDetailsUrl","console","log","description","Dashboard","firstname","lastname","city","state"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\n\nconst metersToMiles = 0.000621371192;\n\nfunction AthleteStats() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  let stats;\n  let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n  if (cookies.access_token && !stats) {\n    stats = asyncFetch(athleteStatsUrl, cookies.access_token)\n      .then(data => {\n        return data.json();\n      })\n      .then(stats => {\n        return stats;\n      });\n    return <div>Loading Stats...</div>;\n  } else {\n    return (\n      <React.Fragment>\n        <div>\n          {(stats.all_run_totals.distance * metersToMiles).toFixed(1)} miles\n        </div>\n        <div>\n          {context.user.clubs.map(club => {\n            return club.name;\n          })}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction Clubs() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  let usersClubs = context.user.clubs;\n  let clubs;\n  if (cookies.access_token && !clubs.length) {\n    clubs = usersClubs.map(club => {\n      let clubDetailsUrl = `https://www.strava.com/api/v3/clubs/${club.id}`;\n      return asyncFetch(clubDetailsUrl, cookies.access_token)\n        .then(data => {\n          return data.json();\n        })\n        .then(club => {\n          return club;\n        });\n    });\n  }\n  return clubs\n    ? clubs.map(club => {\n        console.log(club);\n        return (\n          <div key={club.id}>\n            <div>{club.description}</div>\n          </div>\n        );\n      })\n    : \"Loading Club Details...\";\n}\n\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n  return (\n    <div>\n      <div>{`${context.user.firstname}${\" \"}${context.user.lastname}`}</div>\n      <div>{`${context.user.city}${\", \"}${context.user.state}`}</div>\n      <AthleteStats />\n      <Clubs />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}