{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js\";\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nimport { Box, Typography } from \"@material-ui/core\";\nconst metersToMiles = 0.000621371192;\n\nfunction AthleteStats() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  const [stats, setStats] = useState(null);\n  let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n\n  if (cookies.access_token && !stats) {\n    asyncFetch(athleteStatsUrl, cookies.access_token).then(data => {\n      return data.json();\n    }).then(stats => {\n      setStats(stats);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Loading Stats...\");\n  } else {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, (stats.all_run_totals.distance * metersToMiles).toFixed(1), \" miles\"));\n  }\n}\n\nfunction Clubs() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  const [clubs, setClubs] = useState([]);\n  let usersClubs = context.user.clubs;\n\n  if (cookies.access_token && !clubs.length) {\n    usersClubs.map(club => {\n      let clubDetailsUrl = `https://www.strava.com/api/v3/clubs/${club.id}`;\n      return asyncFetch(clubDetailsUrl, cookies.access_token).then(data => {\n        return data.json();\n      }).then(club => {\n        setClubs(clubs => [...clubs, club]);\n      });\n    });\n  }\n\n  return clubs.length !== 0 ? clubs.map(club => {\n    return React.createElement(Box, {\n      key: club.id,\n      my: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", club.name), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, `${club.city}${\", \"}${club.state}`), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, club.member_count, \" Members\"), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, club.description));\n  }) : \"Loading Club Details...\";\n}\n\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, `${context.user.firstname}${\" \"}${context.user.lastname}`), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, `${context.user.city}${\", \"}${context.user.state}`), React.createElement(AthleteStats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Clubs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js"],"names":["React","useContext","useState","AuthContext","useCookies","asyncFetch","Box","Typography","metersToMiles","AthleteStats","cookies","context","stats","setStats","athleteStatsUrl","user","id","access_token","then","data","json","all_run_totals","distance","toFixed","Clubs","clubs","setClubs","usersClubs","length","map","club","clubDetailsUrl","name","city","state","member_count","description","Dashboard","firstname","lastname"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst metersToMiles = 0.000621371192;\n\nfunction AthleteStats() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  const [stats, setStats] = useState(null);\n  let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n  if (cookies.access_token && !stats) {\n    asyncFetch(athleteStatsUrl, cookies.access_token)\n      .then(data => {\n        return data.json();\n      })\n      .then(stats => {\n        setStats(stats);\n      });\n    return <div>Loading Stats...</div>;\n  } else {\n    return (\n      <React.Fragment>\n        <div>\n          {(stats.all_run_totals.distance * metersToMiles).toFixed(1)} miles\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction Clubs() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  const [clubs, setClubs] = useState([]);\n  let usersClubs = context.user.clubs;\n  if (cookies.access_token && !clubs.length) {\n    usersClubs.map(club => {\n      let clubDetailsUrl = `https://www.strava.com/api/v3/clubs/${club.id}`;\n      return asyncFetch(clubDetailsUrl, cookies.access_token)\n        .then(data => {\n          return data.json();\n        })\n        .then(club => {\n          setClubs(clubs => [...clubs, club]);\n        });\n    });\n  }\n  return clubs.length !== 0\n    ? clubs.map(club => {\n        return (\n          <Box key={club.id} my={2}>\n            <Typography variant=\"h5\"> {club.name}</Typography>\n            <Typography variant=\"body1\">{`${club.city}${\", \"}${\n              club.state\n            }`}</Typography>\n            <Typography variant=\"body1\">{club.member_count} Members</Typography>\n            <Typography variant=\"body1\">{club.description}</Typography>\n          </Box>\n        );\n      })\n    : \"Loading Club Details...\";\n}\n\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n  return (\n    <div>\n      <div>{`${context.user.firstname}${\" \"}${context.user.lastname}`}</div>\n      <div>{`${context.user.city}${\", \"}${context.user.state}`}</div>\n      <AthleteStats />\n      <Clubs />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}