{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js\";\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  function AthleteStats() {\n    const [state, setState] = useState(null);\n    const [cookies, setCookies] = useCookies();\n    const {\n      access_token\n    } = cookies;\n\n    if (access_token) {\n      asyncFetch(athleteStatsUrl, cookies.access_token).then(data => {\n        return data.json();\n      }).then(user => {\n        setState({\n          user: user,\n          status: \"success\",\n          cookies: cookies\n        });\n      });\n    } else {\n      setState({\n        user: null,\n        status: \"error\",\n        cookies: cookies\n      }); // GET NEW ACCESS TOKEN\n    }\n  }\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, `${context.user.firstname}${\" \"}${context.user.lastname}`), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, `${context.user.city}${\", \"}${context.user.state}`), React.createElement(AthleteStats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js"],"names":["React","useContext","useState","AuthContext","useCookies","Dashboard","context","AthleteStats","state","setState","cookies","setCookies","access_token","asyncFetch","athleteStatsUrl","then","data","json","user","status","firstname","lastname","city"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,OAAO,GAAGL,UAAU,CAACE,WAAD,CAA1B;;AAEA,WAASI,YAAT,GAAwB;AACtB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,UAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBP,UAAU,EAAxC;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAmBF,OAAzB;;AACA,QAAIE,YAAJ,EAAkB;AAChBC,MAAAA,UAAU,CAACC,eAAD,EAAkBJ,OAAO,CAACE,YAA1B,CAAV,CACGG,IADH,CACQC,IAAI,IAAI;AACZ,eAAOA,IAAI,CAACC,IAAL,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZT,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAEA,IAAR;AAAcC,UAAAA,MAAM,EAAE,SAAtB;AAAiCT,UAAAA,OAAO,EAAEA;AAA1C,SAAD,CAAR;AACD,OANH;AAOD,KARD,MAQO;AACLD,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,MAAM,EAAE,OAAtB;AAA+BT,QAAAA,OAAO,EAAEA;AAAxC,OAAD,CAAR,CADK,CAEL;AACD;AACF;;AAED,MAAI,CAACJ,OAAO,CAACY,IAAb,EAAmB;AACjB,WAAO,oBAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,GAAEZ,OAAO,CAACY,IAAR,CAAaE,SAAU,GAAE,GAAI,GAAEd,OAAO,CAACY,IAAR,CAAaG,QAAS,EAA9D,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,GAAEf,OAAO,CAACY,IAAR,CAAaI,IAAK,GAAE,IAAK,GAAEhB,OAAO,CAACY,IAAR,CAAaV,KAAM,EAAvD,CAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\n\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  function AthleteStats() {\n    const [state, setState] = useState(null);\n    const [cookies, setCookies] = useCookies();\n    const { access_token } = cookies;\n    if (access_token) {\n      asyncFetch(athleteStatsUrl, cookies.access_token)\n        .then(data => {\n          return data.json();\n        })\n        .then(user => {\n          setState({ user: user, status: \"success\", cookies: cookies });\n        });\n    } else {\n      setState({ user: null, status: \"error\", cookies: cookies });\n      // GET NEW ACCESS TOKEN\n    }\n  }\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n  return (\n    <div>\n      <div>{`${context.user.firstname}${\" \"}${context.user.lastname}`}</div>\n      <div>{`${context.user.city}${\", \"}${context.user.state}`}</div>\n      <AthleteStats />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}