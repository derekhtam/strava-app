{"ast":null,"code":"import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBERcuTDJSuVJZxOynRJh_3oZJQ8veScJA\",\n  authDomain: \"strava-3dcc8.firebaseapp.com\",\n  databaseURL: \"https://strava-3dcc8.firebaseio.com\",\n  projectId: \"strava-3dcc8\",\n  storageBucket: \"strava-3dcc8.appspot.com\",\n  messagingSenderId: \"561434670560\",\n  appId: \"1:561434670560:web:fb57e3e4d0c662c45d2785\",\n  measurementId: \"G-9W5CLRS4F5\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    console.log(\"firebase initialized\");\n    this.auth = app.auth();\n    console.log(this.auth);\n    this.db = app.firestore();\n  }\n\n  signIntoFirebase(uid) {\n    return this.auth.auth().createCustomToken(uid).catch(function (error) {\n      // Handle Errors here.\n      var errorMessage = error.message;\n      console.error(\"Error Message: \", errorMessage); // ...\n    });\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(name, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","initializeApp","console","log","auth","db","firestore","signIntoFirebase","uid","createCustomToken","catch","error","errorMessage","message","logout","signOut","register","name","email","password","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","isInitialized","Promise","resolve","onAuthStateChanged"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,8BAFS;AAGrBC,EAAAA,WAAW,EAAE,qCAHQ;AAIrBC,EAAAA,SAAS,EAAE,cAJU;AAKrBC,EAAAA,aAAa,EAAE,0BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;;AAWA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,GAAG;AACZX,IAAAA,GAAG,CAACY,aAAJ,CAAkBX,cAAlB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,SAAKC,IAAL,GAAYf,GAAG,CAACe,IAAJ,EAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAjB;AACA,SAAKC,EAAL,GAAUhB,GAAG,CAACiB,SAAJ,EAAV;AACD;;AAEDC,EAAAA,gBAAgB,CAACC,GAAD,EAAM;AACpB,WAAO,KAAKJ,IAAL,CACJA,IADI,GAEJK,iBAFI,CAEcD,GAFd,EAGJE,KAHI,CAGE,UAASC,KAAT,EAAgB;AACrB;AACA,UAAIC,YAAY,GAAGD,KAAK,CAACE,OAAzB;AACAX,MAAAA,OAAO,CAACS,KAAR,CAAc,iBAAd,EAAiCC,YAAjC,EAHqB,CAIrB;AACD,KARI,CAAP;AASD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKV,IAAL,CAAUW,OAAV,EAAP;AACD;;AAED,QAAMC,QAAN,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,QAA5B,EAAsC;AACpC,UAAM,KAAKf,IAAL,CAAUgB,8BAAV,CAAyCF,KAAzC,EAAgDC,QAAhD,CAAN;AACA,WAAO,KAAKf,IAAL,CAAUiB,WAAV,CAAsBC,aAAtB,CAAoC;AACzCC,MAAAA,WAAW,EAAEN;AAD4B,KAApC,CAAP;AAGD;;AAEDO,EAAAA,aAAa,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B,WAAKtB,IAAL,CAAUuB,kBAAV,CAA6BD,OAA7B;AACD,KAFM,CAAP;AAGD;;AApCY;;AAuCf,eAAe,IAAI3B,QAAJ,EAAf","sourcesContent":["import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBERcuTDJSuVJZxOynRJh_3oZJQ8veScJA\",\n  authDomain: \"strava-3dcc8.firebaseapp.com\",\n  databaseURL: \"https://strava-3dcc8.firebaseio.com\",\n  projectId: \"strava-3dcc8\",\n  storageBucket: \"strava-3dcc8.appspot.com\",\n  messagingSenderId: \"561434670560\",\n  appId: \"1:561434670560:web:fb57e3e4d0c662c45d2785\",\n  measurementId: \"G-9W5CLRS4F5\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    console.log(\"firebase initialized\");\n    this.auth = app.auth();\n    console.log(this.auth);\n    this.db = app.firestore();\n  }\n\n  signIntoFirebase(uid) {\n    return this.auth\n      .auth()\n      .createCustomToken(uid)\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorMessage = error.message;\n        console.error(\"Error Message: \", errorMessage);\n        // ...\n      });\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(name, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: name\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n}\n\nexport default new Firebase();\n"]},"metadata":{},"sourceType":"module"}