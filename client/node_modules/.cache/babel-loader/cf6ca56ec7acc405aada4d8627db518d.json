{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js\";\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nconst metersToMiles = 0.000621371192;\nexport default function Dashboard() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  const [stats, setStats] = useState(null);\n  const [clubs, setClubs] = useState([]);\n  const {\n    access_token\n  } = cookies;\n\n  function AthleteStats() {\n    let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n\n    if (access_token && !stats) {\n      asyncFetch(athleteStatsUrl, cookies.access_token).then(data => {\n        return data.json();\n      }).then(stats => {\n        setStats(stats);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Loading Stats...\");\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, (stats.all_run_totals.distance * metersToMiles).toFixed(1), \" miles\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, context.user.clubs.map(club => {\n        return club.name;\n      })));\n    }\n  }\n\n  function Clubs() {\n    let usersClubs = context.user.clubs;\n\n    if (access_token && !clubs.length) {\n      usersClubs.map(club => {\n        let clubDetailsUrl = `https://www.strava.com/api/v3/clubs/${club.id}`;\n        return asyncFetch(clubDetailsUrl, cookies.access_token).then(data => {\n          return data.json();\n        }).then(club => {\n          const newClubs = clubs.push(club);\n          setClubs([newClubs]);\n        });\n      });\n    }\n\n    return clubs ? clubs.map(club => {\n      return React.createElement(\"div\", {\n        key: club.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, club.description));\n    }) : \"Loading Club Details...\";\n  }\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, `${context.user.firstname}${\" \"}${context.user.lastname}`), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, `${context.user.city}${\", \"}${context.user.state}`), React.createElement(AthleteStats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Clubs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js"],"names":["React","useContext","useState","AuthContext","useCookies","asyncFetch","metersToMiles","Dashboard","cookies","context","stats","setStats","clubs","setClubs","access_token","AthleteStats","athleteStatsUrl","user","id","then","data","json","all_run_totals","distance","toFixed","map","club","name","Clubs","usersClubs","length","clubDetailsUrl","newClubs","push","description","firstname","lastname","city","state"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\n\nconst metersToMiles = 0.000621371192;\n\nexport default function Dashboard() {\n  const [cookies] = useCookies();\n  const context = useContext(AuthContext);\n  const [stats, setStats] = useState(null);\n  const [clubs, setClubs] = useState([]);\n  const { access_token } = cookies;\n\n  function AthleteStats() {\n    let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n    if (access_token && !stats) {\n      asyncFetch(athleteStatsUrl, cookies.access_token)\n        .then(data => {\n          return data.json();\n        })\n        .then(stats => {\n          setStats(stats);\n        });\n      return <div>Loading Stats...</div>;\n    } else {\n      return (\n        <React.Fragment>\n          <div>\n            {(stats.all_run_totals.distance * metersToMiles).toFixed(1)} miles\n          </div>\n          <div>\n            {context.user.clubs.map(club => {\n              return club.name;\n            })}\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n\n  function Clubs() {\n    let usersClubs = context.user.clubs;\n    if (access_token && !clubs.length) {\n      usersClubs.map(club => {\n        let clubDetailsUrl = `https://www.strava.com/api/v3/clubs/${club.id}`;\n        return asyncFetch(clubDetailsUrl, cookies.access_token)\n          .then(data => {\n            return data.json();\n          })\n          .then(club => {\n            const newClubs = clubs.push(club);\n            setClubs([newClubs]);\n          });\n      });\n    }\n    return clubs\n      ? clubs.map(club => {\n          return (\n            <div key={club.id}>\n              <div>{club.description}</div>\n            </div>\n          );\n        })\n      : \"Loading Club Details...\";\n  }\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n  return (\n    <div>\n      <div>{`${context.user.firstname}${\" \"}${context.user.lastname}`}</div>\n      <div>{`${context.user.city}${\", \"}${context.user.state}`}</div>\n      <AthleteStats />\n      <Clubs />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}