{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-app/client/src/components/App/index.js\";\nimport React, { useState } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport HandleRedirect from \"../HandleRedirect\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nimport Firebase from \"../firebase\";\nconst theme = createMuiTheme();\nexport const AuthContext = React.createContext();\n\nfunction AuthContextProvider({\n  children\n}) {\n  const [cookies] = useCookies();\n  const [state, setState] = React.useState({});\n  React.useEffect(() => {\n    let currentTime = Date.now() / 1000;\n    let access_token = cookies.access_token;\n    let expires_at = cookies.expires_at;\n    console.log(\"Checking permissions...\");\n    setState({\n      cookies: cookies,\n      status: \"pending\",\n      loading: true\n    });\n    let athleteFetchUrl = \"https://www.strava.com/api/v3/athlete\";\n\n    if (access_token && expires_at > currentTime) {\n      asyncFetch(athleteFetchUrl, cookies.access_token).then(data => {\n        return data.json();\n      }).then(user => {\n        setState({\n          user: user,\n          status: \"success\",\n          cookies: cookies,\n          loading: false\n        });\n        const userUID = String(user.uid);\n        Firebase.signIntoFirebase(userUID);\n      });\n    } else {\n      setState({\n        user: null,\n        status: \"error\",\n        cookies: cookies,\n        loading: false\n      }); // GET NEW ACCESS TOKEN\n    }\n  }, [cookies]);\n  return React.createElement(AuthContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, children);\n}\n\nexport default function App() {\n  const [state, setState] = useState();\n  React.useEffect(() => {\n    callBackendAPI().then(res => setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  }, []);\n\n  const callBackendAPI = async () => {\n    const response = await fetch(\"/\");\n    const body = await response.json();\n    console.log(body);\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n\n    return body;\n  };\n\n  return React.createElement(AuthContextProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/token\",\n    component: HandleRedirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-app/client/src/components/App/index.js"],"names":["React","useState","MuiThemeProvider","createMuiTheme","BrowserRouter","Router","Switch","Route","Dashboard","Login","HandleRedirect","useCookies","asyncFetch","Firebase","theme","AuthContext","createContext","AuthContextProvider","children","cookies","state","setState","useEffect","currentTime","Date","now","access_token","expires_at","console","log","status","loading","athleteFetchUrl","then","data","json","user","userUID","String","uid","signIntoFirebase","App","callBackendAPI","res","express","catch","err","response","fetch","body","Error","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport HandleRedirect from \"../HandleRedirect\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nimport Firebase from \"../firebase\";\nconst theme = createMuiTheme();\n\nexport const AuthContext = React.createContext();\n\nfunction AuthContextProvider({ children }) {\n  const [cookies] = useCookies();\n  const [state, setState] = React.useState({});\n\n  React.useEffect(() => {\n    let currentTime = Date.now() / 1000;\n    let access_token = cookies.access_token;\n    let expires_at = cookies.expires_at;\n    console.log(\"Checking permissions...\");\n\n    setState({\n      cookies: cookies,\n      status: \"pending\",\n      loading: true\n    });\n\n    let athleteFetchUrl = \"https://www.strava.com/api/v3/athlete\";\n\n    if (access_token && expires_at > currentTime) {\n      asyncFetch(athleteFetchUrl, cookies.access_token)\n        .then(data => {\n          return data.json();\n        })\n        .then(user => {\n          setState({\n            user: user,\n            status: \"success\",\n            cookies: cookies,\n            loading: false\n          });\n          const userUID = String(user.uid);\n          Firebase.signIntoFirebase(userUID);\n        });\n    } else {\n      setState({\n        user: null,\n        status: \"error\",\n        cookies: cookies,\n        loading: false\n      });\n      // GET NEW ACCESS TOKEN\n    }\n  }, [cookies]);\n  return <AuthContext.Provider value={state}>{children}</AuthContext.Provider>;\n}\n\nexport default function App() {\n  const [state, setState] = useState();\n\n  React.useEffect(() => {\n    callBackendAPI()\n      .then(res => setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }, []);\n\n  const callBackendAPI = async () => {\n    const response = await fetch(\"/\");\n    const body = await response.json();\n    console.log(body);\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  return (\n    <AuthContextProvider>\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route exact path=\"/login\" component={Login}></Route>\n            <Route path=\"/token\" component={HandleRedirect}></Route>\n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    </AuthContextProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}