{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/App/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport HandleRedirect from \"../HandleRedirect\";\nimport firebase from \"../firebase\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nconst theme = createMuiTheme();\nexport const AuthContext = React.createContext();\n\nfunction AuthContextProvider({\n  children\n}) {\n  const [cookies, setCookie] = useCookies();\n  const [state, setState] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n  let currentTime = Date.now() / 1000;\n  let access_token = cookies.access_token;\n  let expires_at = cookies.expires_at;\n  let refresh_token = cookies.refresh_token;\n  React.useEffect(() => {\n    setState({\n      cookies: cookies,\n      status: \"pending\"\n    });\n    let athleteFetchUrl = \"https://www.strava.com/api/v3/athlete\";\n\n    if (access_token && expires_at > currentTime) {\n      asyncFetch(athleteFetchUrl, cookies.access_token).then(data => {\n        return data.json();\n      }).then(user => {\n        setState({\n          user: user,\n          status: \"success\",\n          cookies: cookies\n        });\n      });\n    } else {\n      setState({\n        user: null,\n        status: \"error\",\n        cookies: cookies\n      }); // GET NEW ACCESS TOKEN\n    }\n  }, [cookies]);\n  return React.createElement(AuthContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, children);\n}\n\nexport default function App() {\n  return React.createElement(AuthContextProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/token\",\n    component: HandleRedirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/App/index.js"],"names":["React","useState","useEffect","MuiThemeProvider","createMuiTheme","BrowserRouter","Router","Switch","Route","Dashboard","Login","HandleRedirect","firebase","useCookies","asyncFetch","theme","AuthContext","createContext","AuthContextProvider","children","cookies","setCookie","state","setState","loading","setLoading","currentTime","Date","now","access_token","expires_at","refresh_token","status","athleteFetchUrl","then","data","json","user","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport HandleRedirect from \"../HandleRedirect\";\nimport firebase from \"../firebase\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\n\nconst theme = createMuiTheme();\n\nexport const AuthContext = React.createContext();\n\nfunction AuthContextProvider({ children }) {\n  const [cookies, setCookie] = useCookies();\n  const [state, setState] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n\n  let currentTime = Date.now() / 1000;\n  let access_token = cookies.access_token;\n  let expires_at = cookies.expires_at;\n  let refresh_token = cookies.refresh_token;\n\n  React.useEffect(() => {\n    setState({\n      cookies: cookies,\n      status: \"pending\"\n    });\n\n    let athleteFetchUrl = \"https://www.strava.com/api/v3/athlete\";\n\n    if (access_token && expires_at > currentTime) {\n      asyncFetch(athleteFetchUrl, cookies.access_token)\n        .then(data => {\n          return data.json();\n        })\n        .then(user => {\n          setState({ user: user, status: \"success\", cookies: cookies });\n        });\n    } else {\n      setState({ user: null, status: \"error\", cookies: cookies });\n      // GET NEW ACCESS TOKEN\n    }\n  }, [cookies]);\n  return <AuthContext.Provider value={state}>{children}</AuthContext.Provider>;\n}\n\nexport default function App() {\n  return (\n    <AuthContextProvider>\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route exact path=\"/login\" component={Login}></Route>\n            <Route path=\"/token\" component={HandleRedirect}></Route>\n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    </AuthContextProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}