{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/App/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport HandleRedirect from \"../HandleRedirect\";\nimport firebase from \"../firebase\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nconst theme = createMuiTheme();\nexport default function App() {\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false);\n  useEffect(() => {\n    firebase.isInitialized().then(val => {\n      setFirebaseInitialized(val);\n    });\n  });\n  const AuthContext = React.createContext();\n\n  function useAuthState() {\n    const state = React.useContext(AuthContext);\n    const isPending = state.status === \"pending\";\n    const isSuccess = state.status === \"success\";\n    const user = state.user;\n    const isAuthenticated = isSuccess;\n    return { ...state,\n      isPending,\n      isSuccess,\n      isAuthenticated\n    };\n  }\n\n  function AuthContextProvider({\n    children\n  }) {\n    const [cookies, setCookie] = useCookies();\n    const [state, setState] = React.useState({});\n    const [loading, setLoading] = React.useState(true);\n    let currentTime = Date.now() / 1000;\n    let access_token = cookies.access_token;\n    let expires_at = cookies.expires_at;\n    let refresh_token = cookies.refresh_token;\n    React.useEffect(() => {\n      setState({\n        cookies: cookies,\n        status: \"pending\"\n      });\n      let athleteFetchUrl = \"https://www.strava.com/api/v3/athlete\";\n\n      if (access_token && expires_at > currentTime) {\n        asyncFetch(athleteFetchUrl, cookies.access_token).then(data => {\n          return data.json();\n        }).then(user => {\n          setState({\n            user: user,\n            status: \"success\",\n            cookies: cookies\n          });\n        });\n      } else {\n        setState({\n          user: null,\n          status: \"error\",\n          cookies: cookies\n        });\n      }\n    }, [cookies]);\n    return React.createElement(AuthContext.Provider, {\n      value: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, children);\n  }\n\n  return firebaseInitialized !== false ? React.createElement(AuthContextProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/token\",\n    component: HandleRedirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Loading\");\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/App/index.js"],"names":["React","useState","useEffect","MuiThemeProvider","createMuiTheme","BrowserRouter","Router","Switch","Route","Dashboard","Login","HandleRedirect","firebase","useCookies","asyncFetch","theme","App","firebaseInitialized","setFirebaseInitialized","isInitialized","then","val","AuthContext","createContext","useAuthState","state","useContext","isPending","status","isSuccess","user","isAuthenticated","AuthContextProvider","children","cookies","setCookie","setState","loading","setLoading","currentTime","Date","now","access_token","expires_at","refresh_token","athleteFetchUrl","data","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport HandleRedirect from \"../HandleRedirect\";\nimport firebase from \"../firebase\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\n\nconst theme = createMuiTheme();\n\nexport default function App() {\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false);\n\n  useEffect(() => {\n    firebase.isInitialized().then(val => {\n      setFirebaseInitialized(val);\n    });\n  });\n\n  const AuthContext = React.createContext();\n\n  function useAuthState() {\n    const state = React.useContext(AuthContext);\n    const isPending = state.status === \"pending\";\n    const isSuccess = state.status === \"success\";\n    const user = state.user;\n    const isAuthenticated = isSuccess;\n    return {\n      ...state,\n      isPending,\n      isSuccess,\n      isAuthenticated\n    };\n  }\n\n  function AuthContextProvider({ children }) {\n    const [cookies, setCookie] = useCookies();\n    const [state, setState] = React.useState({});\n    const [loading, setLoading] = React.useState(true);\n\n    let currentTime = Date.now() / 1000;\n    let access_token = cookies.access_token;\n    let expires_at = cookies.expires_at;\n    let refresh_token = cookies.refresh_token;\n\n    React.useEffect(() => {\n      setState({\n        cookies: cookies,\n        status: \"pending\"\n      });\n\n      let athleteFetchUrl = \"https://www.strava.com/api/v3/athlete\";\n\n      if (access_token && expires_at > currentTime) {\n        asyncFetch(athleteFetchUrl, cookies.access_token)\n          .then(data => {\n            return data.json();\n          })\n          .then(user => {\n            setState({ user: user, status: \"success\", cookies: cookies });\n          });\n      } else {\n        setState({ user: null, status: \"error\", cookies: cookies });\n      }\n    }, [cookies]);\n\n    return (\n      <AuthContext.Provider value={state}>{children}</AuthContext.Provider>\n    );\n  }\n\n  return firebaseInitialized !== false ? (\n    <AuthContextProvider>\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route exact path=\"/login\" component={Login}></Route>\n            <Route path=\"/token\" component={HandleRedirect}></Route>\n          </Switch>\n        </Router>\n      </MuiThemeProvider>\n    </AuthContextProvider>\n  ) : (\n    <div>Loading</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}