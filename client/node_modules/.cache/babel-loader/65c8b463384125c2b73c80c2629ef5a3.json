{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/HandleRedirect/index.js\";\nimport React from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Redirect } from \"react-router-dom\";\n\nlet setTokensFromUrl = async () => {\n  const search = window.location.search.substring(1);\n\n  if (!search) {\n    return;\n  }\n\n  const query = JSON.parse('{\"' + decodeURI(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n  console.log(\"Query\", query);\n  let tokens;\n\n  if (query.code) {\n    tokens = fetch(`https://www.strava.com/oauth/token?client_id=41833&client_secret=3017d913766ccf81c8d716c0a40a961b35488aea&code=${query.code}&grant_type=authorization_code`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n      return {\n        accessToken: data.access_token,\n        refreshToken: data.refresh_token,\n        expiresAt: data.expires_at\n      };\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  return tokens;\n};\n\nconst HandleRedirect = () => {\n  const [cookies, setCookie] = useCookies([]);\n  React.useEffect(() => {\n    setTokensFromUrl().then(value => {\n      if (!value) {\n        return;\n      }\n\n      setCookie(\"access_token\", value.accessToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"refresh_token\", value.refreshToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"expires_at\", value.expiresAt, {\n        path: \"/\",\n        maxAge: 604800\n      });\n    });\n  }, []);\n  console.log(\"Cookies\", cookies); // Use reresh_token to obtain new access token when it expires\n\n  const currentTime = Date.now() / 1000;\n\n  if (cookies.expires_at < currentTime) {\n    console.log(\"Access Token Expired! Refreshing...\");\n    const newTokens = fetch(`https://www.strava.com/oauth/token?client_id=41833&client_secret=3017d913766ccf81c8d716c0a40a961b35488aea&refresh_token=${cookies.refresh_token}&grant_type=refresh_token`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"New Tokens: \", newTokens);\n    return React.createElement(Redirect, {\n      to: \"/token\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  });\n};\n\nexport default HandleRedirect;","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/HandleRedirect/index.js"],"names":["React","useCookies","Redirect","setTokensFromUrl","search","window","location","substring","query","JSON","parse","decodeURI","replace","console","log","tokens","code","fetch","method","headers","then","response","json","data","accessToken","access_token","refreshToken","refresh_token","expiresAt","expires_at","catch","error","HandleRedirect","cookies","setCookie","useEffect","value","path","maxAge","currentTime","Date","now","newTokens"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { Redirect } from \"react-router-dom\";\n\nlet setTokensFromUrl = async () => {\n  const search = window.location.search.substring(1);\n  if (!search) {\n    return;\n  }\n  const query = JSON.parse(\n    '{\"' +\n      decodeURI(search)\n        .replace(/\"/g, '\\\\\"')\n        .replace(/&/g, '\",\"')\n        .replace(/=/g, '\":\"') +\n      '\"}'\n  );\n  console.log(\"Query\", query);\n  let tokens;\n  if (query.code) {\n    tokens = fetch(\n      `https://www.strava.com/oauth/token?client_id=41833&client_secret=3017d913766ccf81c8d716c0a40a961b35488aea&code=${query.code}&grant_type=authorization_code`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Success:\", data);\n        return {\n          accessToken: data.access_token,\n          refreshToken: data.refresh_token,\n          expiresAt: data.expires_at\n        };\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n  return tokens;\n};\n\nconst HandleRedirect = () => {\n  const [cookies, setCookie] = useCookies([]);\n  React.useEffect(() => {\n    setTokensFromUrl().then(value => {\n      if (!value) {\n        return;\n      }\n      setCookie(\"access_token\", value.accessToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"refresh_token\", value.refreshToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"expires_at\", value.expiresAt, {\n        path: \"/\",\n        maxAge: 604800\n      });\n    });\n  }, []);\n  console.log(\"Cookies\", cookies);\n\n  // Use reresh_token to obtain new access token when it expires\n  const currentTime = Date.now() / 1000;\n  if (cookies.expires_at < currentTime) {\n    console.log(\"Access Token Expired! Refreshing...\");\n    const newTokens = fetch(\n      `https://www.strava.com/oauth/token?client_id=41833&client_secret=3017d913766ccf81c8d716c0a40a961b35488aea&refresh_token=${cookies.refresh_token}&grant_type=refresh_token`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    );\n    console.log(\"New Tokens: \", newTokens);\n    return <Redirect to=\"/token\"></Redirect>;\n  }\n  return <Redirect to=\"/\"></Redirect>;\n};\n\nexport default HandleRedirect;\n"]},"metadata":{},"sourceType":"module"}