{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js\";\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\nconst metersToMiles = 0.000621371192;\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  function AthleteStats() {\n    const [stats, setStats] = useState(null);\n    const [cookies] = useCookies();\n    const context = useContext(AuthContext);\n    const {\n      access_token\n    } = cookies;\n    let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n\n    if (access_token && !stats) {\n      asyncFetch(athleteStatsUrl, cookies.access_token).then(data => {\n        return data.json();\n      }).then(stats => {\n        setStats(stats);\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, (stats.all_run_totals.distance * metersToMiles).toFixed(1), \" miles\");\n    }\n  }\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, `${context.user.firstname}${\" \"}${context.user.lastname}`), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, `${context.user.city}${\", \"}${context.user.state}`), React.createElement(AthleteStats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/Dashboard/index.js"],"names":["React","useContext","useState","AuthContext","useCookies","asyncFetch","metersToMiles","Dashboard","context","AthleteStats","stats","setStats","cookies","access_token","athleteStatsUrl","user","id","then","data","json","all_run_totals","distance","toFixed","firstname","lastname","city","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,MAAMC,aAAa,GAAG,cAAtB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,OAAO,GAAGP,UAAU,CAACE,WAAD,CAA1B;;AAEA,WAASM,YAAT,GAAwB;AACtB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,UAAM,CAACU,OAAD,IAAYR,UAAU,EAA5B;AACA,UAAMI,OAAO,GAAGP,UAAU,CAACE,WAAD,CAA1B;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAmBD,OAAzB;AACA,QAAIE,eAAe,GAAI,0CAAyCN,OAAO,CAACO,IAAR,CAAaC,EAAG,QAAhF;;AACA,QAAIH,YAAY,IAAI,CAACH,KAArB,EAA4B;AAC1BL,MAAAA,UAAU,CAACS,eAAD,EAAkBF,OAAO,CAACC,YAA1B,CAAV,CACGI,IADH,CACQC,IAAI,IAAI;AACZ,eAAOA,IAAI,CAACC,IAAL,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQP,KAAK,IAAI;AACbC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OANH;AAOD,KARD,MAQO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACA,KAAK,CAACU,cAAN,CAAqBC,QAArB,GAAgCf,aAAjC,EAAgDgB,OAAhD,CAAwD,CAAxD,CADH,WADF;AAKD;AACF;;AAED,MAAI,CAACd,OAAO,CAACO,IAAb,EAAmB;AACjB,WAAO,oBAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,GAAEP,OAAO,CAACO,IAAR,CAAaQ,SAAU,GAAE,GAAI,GAAEf,OAAO,CAACO,IAAR,CAAaS,QAAS,EAA9D,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,GAAEhB,OAAO,CAACO,IAAR,CAAaU,IAAK,GAAE,IAAK,GAAEjB,OAAO,CAACO,IAAR,CAAaW,KAAM,EAAvD,CAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useCookies } from \"react-cookie\";\nimport { asyncFetch } from \"../helpers/asyncFetch\";\n\nconst metersToMiles = 0.000621371192;\n\nexport default function Dashboard() {\n  const context = useContext(AuthContext);\n\n  function AthleteStats() {\n    const [stats, setStats] = useState(null);\n    const [cookies] = useCookies();\n    const context = useContext(AuthContext);\n    const { access_token } = cookies;\n    let athleteStatsUrl = `https://www.strava.com/api/v3/athletes/${context.user.id}/stats`;\n    if (access_token && !stats) {\n      asyncFetch(athleteStatsUrl, cookies.access_token)\n        .then(data => {\n          return data.json();\n        })\n        .then(stats => {\n          setStats(stats);\n        });\n    } else {\n      return (\n        <div>\n          {(stats.all_run_totals.distance * metersToMiles).toFixed(1)} miles\n        </div>\n      );\n    }\n  }\n\n  if (!context.user) {\n    return \"Athlete not found.\";\n  }\n  return (\n    <div>\n      <div>{`${context.user.firstname}${\" \"}${context.user.lastname}`}</div>\n      <div>{`${context.user.city}${\", \"}${context.user.state}`}</div>\n      <AthleteStats />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}