{"ast":null,"code":"var _jsxFileName = \"/Users/derektam/Documents/strava-client/src/components/HandleRedirect/index.js\";\nimport React from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nlet setTokensFromUrl = async () => {\n  const search = window.location.search.substring(1);\n  const query = JSON.parse('{\"' + decodeURI(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n\n  if (query.code) {\n    return fetch(\"https://example.com/profile\", {\n      method: \"POST\",\n      // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  let tokens = {\n    accessToken: query.access_token,\n    firebaseToken: query.firebase_token,\n    refreshToken: query.refresh_token,\n    expiresAt: query.expires_at\n  };\n  return tokens;\n};\n\nconst HandleRedirect = () => {\n  const [cookies, setCookie] = useCookies([]);\n  React.useEffect(() => {\n    setTokensFromUrl().then(value => {\n      setCookie(\"access_token\", value.accessToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"firebase_token\", value.firebaseToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"refresh_token\", value.refreshToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"expires_at\", value.expiresAt, {\n        path: \"/\",\n        maxAge: 604800\n      });\n    });\n  }, []);\n  console.log(cookies);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"success\");\n};\n\nexport default HandleRedirect;","map":{"version":3,"sources":["/Users/derektam/Documents/strava-client/src/components/HandleRedirect/index.js"],"names":["React","useCookies","setTokensFromUrl","search","window","location","substring","query","JSON","parse","decodeURI","replace","code","fetch","method","headers","body","stringify","data","then","response","json","console","log","catch","error","tokens","accessToken","access_token","firebaseToken","firebase_token","refreshToken","refresh_token","expiresAt","expires_at","HandleRedirect","cookies","setCookie","useEffect","value","path","maxAge"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,IAAIC,gBAAgB,GAAG,YAAY;AACjC,QAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBG,SAAvB,CAAiC,CAAjC,CAAf;AACA,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CACZ,OACEC,SAAS,CAACP,MAAD,CAAT,CACGQ,OADH,CACW,IADX,EACiB,KADjB,EAEGA,OAFH,CAEW,IAFX,EAEiB,KAFjB,EAGGA,OAHH,CAGW,IAHX,EAGiB,KAHjB,CADF,GAKE,IANU,CAAd;;AASA,MAAIJ,KAAK,CAACK,IAAV,EAAgB;AACd,WAAOC,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAC1B;AAChBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAER,IAAI,CAACS,SAAL,CAAeC,IAAf;AALoC,KAAhC,CAAL,CAOJC,IAPI,CAOCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPb,EAQJF,IARI,CAQCD,IAAI,IAAI;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,IAAxB;AACD,KAVI,EAWJM,KAXI,CAWEC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,KAbI,CAAP;AAcD;;AAED,MAAIC,MAAM,GAAG;AACXC,IAAAA,WAAW,EAAEpB,KAAK,CAACqB,YADR;AAEXC,IAAAA,aAAa,EAAEtB,KAAK,CAACuB,cAFV;AAGXC,IAAAA,YAAY,EAAExB,KAAK,CAACyB,aAHT;AAIXC,IAAAA,SAAS,EAAE1B,KAAK,CAAC2B;AAJN,GAAb;AAOA,SAAOR,MAAP;AACD,CApCD;;AAsCA,MAAMS,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBpC,UAAU,CAAC,EAAD,CAAvC;AAEAD,EAAAA,KAAK,CAACsC,SAAN,CAAgB,MAAM;AACpBpC,IAAAA,gBAAgB,GAAGiB,IAAnB,CAAwBoB,KAAK,IAAI;AAC/BF,MAAAA,SAAS,CAAC,cAAD,EAAiBE,KAAK,CAACZ,WAAvB,EAAoC;AAC3Ca,QAAAA,IAAI,EAAE,GADqC;AAE3CC,QAAAA,MAAM,EAAE;AAFmC,OAApC,CAAT;AAIAJ,MAAAA,SAAS,CAAC,gBAAD,EAAmBE,KAAK,CAACV,aAAzB,EAAwC;AAC/CW,QAAAA,IAAI,EAAE,GADyC;AAE/CC,QAAAA,MAAM,EAAE;AAFuC,OAAxC,CAAT;AAIAJ,MAAAA,SAAS,CAAC,eAAD,EAAkBE,KAAK,CAACR,YAAxB,EAAsC;AAC7CS,QAAAA,IAAI,EAAE,GADuC;AAE7CC,QAAAA,MAAM,EAAE;AAFqC,OAAtC,CAAT;AAIAJ,MAAAA,SAAS,CAAC,YAAD,EAAeE,KAAK,CAACN,SAArB,EAAgC;AACvCO,QAAAA,IAAI,EAAE,GADiC;AAEvCC,QAAAA,MAAM,EAAE;AAF+B,OAAhC,CAAT;AAID,KAjBD;AAkBD,GAnBD,EAmBG,EAnBH;AAoBAnB,EAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,CAzBD;;AA2BA,eAAeD,cAAf","sourcesContent":["import React from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nlet setTokensFromUrl = async () => {\n  const search = window.location.search.substring(1);\n  const query = JSON.parse(\n    '{\"' +\n      decodeURI(search)\n        .replace(/\"/g, '\\\\\"')\n        .replace(/&/g, '\",\"')\n        .replace(/=/g, '\":\"') +\n      '\"}'\n  );\n\n  if (query.code) {\n    return fetch(\"https://example.com/profile\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Success:\", data);\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  let tokens = {\n    accessToken: query.access_token,\n    firebaseToken: query.firebase_token,\n    refreshToken: query.refresh_token,\n    expiresAt: query.expires_at\n  };\n\n  return tokens;\n};\n\nconst HandleRedirect = () => {\n  const [cookies, setCookie] = useCookies([]);\n\n  React.useEffect(() => {\n    setTokensFromUrl().then(value => {\n      setCookie(\"access_token\", value.accessToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"firebase_token\", value.firebaseToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"refresh_token\", value.refreshToken, {\n        path: \"/\",\n        maxAge: 604800\n      });\n      setCookie(\"expires_at\", value.expiresAt, {\n        path: \"/\",\n        maxAge: 604800\n      });\n    });\n  }, []);\n  console.log(cookies);\n  return <div>success</div>;\n};\n\nexport default HandleRedirect;\n"]},"metadata":{},"sourceType":"module"}